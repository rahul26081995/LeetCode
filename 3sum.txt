https://leetcode.com/problems/3sum/

class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        int n = nums.size();
        sort(nums.begin(),nums.end());
        vector<vector<int> >ans;
        for(int i=0;i<n;i++){
            int a = nums[i];
            int s=i+1;
            int e = n-1;
            while(s<e){
                if(nums[s]+nums[e]==-a){
                    ans.push_back({nums[i],nums[s],nums[e]});
                    while(s+1<n && nums[s]==nums[s+1])s++;
                    while(e>s && nums[e]==nums[e-1])e--;
                    s++;
                    e--;
                }
                else if(nums[s]+nums[e]>-a){
                    e--;
                }
                else if(nums[s]+nums[e]<-a){
                    s++;
                }
            }
            while(i+1<n && nums[i]==nums[i+1])i++;
        }
        return ans;
    }
};