https://leetcode.com/problems/merge-intervals/

class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        vector<vector<int> > ans;
        vector<pair<int,int> > vec;
        int n = intervals.size();
        for(int i=0;i<n;i++){
            vector<int> vc = intervals[i];
            vec.push_back(make_pair(vc[0],vc[1]));
        }
        sort(vec.begin(),vec.end());
        stack<pair<int,int> > s;
        s.push(vec[0]);
        for(int i=1;i<n;i++){
            int vs = vec[i].first;
            int ve = vec[i].second;
            int ss = s.top().first;
            int se = s.top().second;
            if(vs > se){
                s.push(make_pair(vs,ve));
            }else{
                s.pop();
                s.push(make_pair(ss,max(ve,se)));
            }
        }
        while(!s.empty()){
            pair<int,int> p = s.top();
            vector<int> temp;
            temp.push_back(p.first);
            temp.push_back(p.second);
            ans.push_back(temp);
            s.pop();
        }
        reverse(ans.begin(),ans.end());
        return ans;
        
    }
};