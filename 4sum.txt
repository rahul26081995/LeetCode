https://leetcode.com/problems/4sum/

class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
       vector<vector<int> >ans;
       int n = nums.size();
       sort(nums.begin(),nums.end());
        for(int i=0;i<n;i++){
            for(int j=i+1;j<n;j++){
                int s=j+1;
                int e = n-1;
                while(s<e && s<n){
                   long long cursum= (long)nums[i]+nums[j]+nums[s]+nums[e];
                    if(cursum==target){
                        ans.push_back({nums[i],nums[j],nums[s],nums[e]});
                        while(s+1<n && nums[s]==nums[s+1]){
                            s++;
                        }
                        while(e>s && nums[e-1]==nums[e]){
                            e--;
                        }
                        s++;
                        e--;
                    }else if(cursum >target){
                        e--;
                    }else{
                        s++;
                    }
                }
                while(j+1 < n && nums[j]==nums[j+1]){
                    j++;
                }
            }
            while(i+1<n && nums[i]==nums[i+1]){
                i++;
            }
        }
        return ans;
    }
};